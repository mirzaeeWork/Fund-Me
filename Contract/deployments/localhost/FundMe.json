{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "adr",
          "type": "address"
        }
      ],
      "name": "Fund",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "adr",
          "type": "address"
        }
      ],
      "name": "Refund",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_adr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fundingAddress",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_adr",
          "type": "address"
        }
      ],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountRequested",
          "type": "uint256"
        }
      ],
      "name": "refund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xeb090fb86daa3fb337feaa403b7ba583e6d4304eef54a52f39a7e9722f6bd5b9",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1395839",
    "logsBloom": "0x
    "blockHash": "0xf34d4442cee4932a293f00136848d48a59dc4ed232c7b7a259ad27611db4570e",
    "transactionHash": "0xeb090fb86daa3fb337feaa403b7ba583e6d4304eef54a52f39a7e9722f6bd5b9",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1395839",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "89c12b95d88a78d1f1641696fe2046b5",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"Fund\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"Refund\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_adr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundingAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_adr\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountRequested\",\"type\":\"uint256\"}],\"name\":\"refund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Patrick Collins\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{\"getAddressToAmountFunded(address)\":{\"params\":{\"fundingAddress\":\"the address of the funder\"},\"returns\":{\"_0\":\"the amount funded\"}}},\"title\":\"A sample Funding Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"Funds our contract based on the ETH/USD price\"},\"getAddressToAmountFunded(address)\":{\"notice\":\"Gets the amount that an address has funded\"}},\"notice\":\"This contract is for creating a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// 1. Pragma\\r\\npragma solidity ^0.8.7;\\r\\n// 2. Imports\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"./PriceConverter.sol\\\";\\r\\n\\r\\n// 3. Interfaces, Libraries, Contracts\\r\\nerror FundMe__NotOwner();\\r\\n\\r\\n/**@title A sample Funding Contract\\r\\n * @author Patrick Collins\\r\\n * @notice This contract is for creating a sample funding contract\\r\\n * @dev This implements price feeds as our library\\r\\n */\\r\\ncontract FundMe {\\r\\n    // Type Declarations\\r\\n    using PriceConverter for uint256;\\r\\n\\r\\n    // State variables\\r\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\r\\n    uint256 public startTime;\\r\\n    uint256 public endTime;\\r\\n    address private immutable i_owner;\\r\\n    address[] private s_funders;\\r\\n    mapping(address => uint256) private s_addressToAmountFunded;\\r\\n    AggregatorV3Interface private s_priceFeed;\\r\\n\\r\\n    // Events (we have none!)\\r\\n    event Fund(uint256 amount, address adr);\\r\\n    event Refund(uint256 amount, address adr);\\r\\n    event Withdrawal(address _adr, uint256 _amount);\\r\\n\\r\\n    // Modifiers\\r\\n    modifier onlyOwner() {\\r\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    // Functions Order:\\r\\n    //// constructor\\r\\n    //// receive\\r\\n    //// fallback\\r\\n    //// external\\r\\n    //// public\\r\\n    //// internal\\r\\n    //// private\\r\\n    //// view / pure\\r\\n\\r\\n    constructor(address priceFeed) {\\r\\n        s_priceFeed = AggregatorV3Interface(priceFeed);\\r\\n        i_owner = msg.sender;\\r\\n        startTime = block.timestamp + 10 seconds;\\r\\n        endTime = startTime + 310 seconds ;\\r\\n    }\\r\\n\\r\\n    /// @notice Funds our contract based on the ETH/USD price\\r\\n    function fund() public payable {\\r\\n        require(\\r\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\r\\n            \\\"You need to spend more ETH!\\\"\\r\\n        );\\r\\n        require(block.timestamp > startTime, \\\"The fund time has not started\\\");\\r\\n        require(block.timestamp < endTime, \\\"time is over\\\");\\r\\n\\r\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\r\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\r\\n        s_funders.push(msg.sender);\\r\\n        emit Fund(msg.value, msg.sender);\\r\\n    }\\r\\n\\r\\n    function refund(uint256 amountRequested) public {\\r\\n        require(\\r\\n            amountRequested > 0 &&\\r\\n                amountRequested <= s_addressToAmountFunded[msg.sender],\\r\\n            \\\"The value entered is not valid\\\"\\r\\n        ); \\r\\n        require(block.timestamp < endTime, \\\"time is over\\\");\\r\\n        s_addressToAmountFunded[msg.sender] -= amountRequested;\\r\\n        (bool success, ) = msg.sender.call{value:amountRequested}(\\\"\\\");\\r\\n        require(success);\\r\\n        emit Refund(amountRequested, msg.sender);\\r\\n    }\\r\\n\\r\\n    function withdraw() public onlyOwner {\\r\\n        require(block.timestamp > endTime, \\\"Time is not over\\\");\\r\\n        for (\\r\\n            uint256 funderIndex = 0;\\r\\n            funderIndex < s_funders.length;\\r\\n            funderIndex++\\r\\n        ) {\\r\\n            address funder = s_funders[funderIndex];\\r\\n            s_addressToAmountFunded[funder] = 0;\\r\\n        }\\r\\n        s_funders = new address[](0);\\r\\n        // Transfer vs call vs Send\\r\\n        // payable(msg.sender).transfer(address(this).balance);\\r\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\r\\n        require(success);\\r\\n        emit Withdrawal(i_owner, address(this).balance);\\r\\n    }\\r\\n\\r\\n    function cheaperWithdraw() public onlyOwner {\\r\\n        require(block.timestamp > endTime, \\\"Time is not over\\\");\\r\\n        address[] memory funders = s_funders;\\r\\n        // mappings can't be in memory, sorry!\\r\\n        for (\\r\\n            uint256 funderIndex = 0;\\r\\n            funderIndex < funders.length;\\r\\n            funderIndex++\\r\\n        ) {\\r\\n            address funder = funders[funderIndex];\\r\\n            s_addressToAmountFunded[funder] = 0;\\r\\n        }\\r\\n        s_funders = new address[](0);\\r\\n        // payable(msg.sender).transfer(address(this).balance);\\r\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\r\\n        require(success);\\r\\n        emit Withdrawal(i_owner, address(this).balance);\\r\\n    }\\r\\n\\r\\n    /** @notice Gets the amount that an address has funded\\r\\n     *  @param fundingAddress the address of the funder\\r\\n     *  @return the amount funded\\r\\n     */\\r\\n    function getAddressToAmountFunded(\\r\\n        address fundingAddress\\r\\n    ) public view returns (uint256) {\\r\\n        return s_addressToAmountFunded[fundingAddress];\\r\\n    }\\r\\n\\r\\n    function getFunder(uint256 index) public view returns (address) {\\r\\n        return s_funders[index];\\r\\n    }\\r\\n\\r\\n    function getOwner() public view returns (address) {\\r\\n        return i_owner;\\r\\n    }\\r\\n\\r\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\r\\n        return s_priceFeed;\\r\\n    }\\r\\n\\r\\n    function getBalance(address _adr) public view returns (uint256) {\\r\\n        return _adr.balance;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x1a3977ba440e7dd1c3f933f636a94caf1d9652350272bb32bbad08160f3d2aed\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n  function getPrice(AggregatorV3Interface priceFeed)\\r\\n    internal\\r\\n    view\\r\\n    returns (uint256)\\r\\n  {\\r\\n    (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n    // ETH/USD rate in 18 digit\\r\\n    return uint256(answer * 10000000000);\\r\\n  }\\r\\n\\r\\n  // 1000000000\\r\\n  // call it get fiatConversionRate, since it assumes something about decimals\\r\\n  // It wouldn't work for every aggregator\\r\\n  function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\r\\n    internal\\r\\n    view\\r\\n    returns (uint256)\\r\\n  {\\r\\n    uint256 ethPrice = getPrice(priceFeed);\\r\\n    uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\r\\n    // the actual ETH/USD conversation rate, after adjusting the extra 0s.\\r\\n    return ethAmountInUsd;\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0xf852a10011296b29ffb3c385f297210c51e41f64174e6cdb5622a07cef0b459e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620019483803806200194883398181016040528101906200003791906200014a565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050600a42620000bb9190620001b5565b600081905550610136600054620000d39190620001b5565b60018190555050620001f0565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200011282620000e5565b9050919050565b620001248162000105565b81146200013057600080fd5b50565b600081519050620001448162000119565b92915050565b600060208284031215620001635762000162620000e0565b5b6000620001738482850162000133565b91505092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620001c2826200017c565b9150620001cf836200017c565b9250828201905080821115620001ea57620001e962000186565b5b92915050565b60805161171262000236600039600081816104c70152818161069f01528181610754015281816107a4015281816109f001528181610c2b0152610ce001526117126000f3fe6080604052600436106100a75760003560e01c8063893d20e811610064578063893d20e8146101aa5780639e87a5cd146101d5578063b60d428814610200578063be2693f01461020a578063d7b4750c14610221578063f8b2cb4f1461025e576100a7565b80630343fb25146100ac578063278ecde1146100e95780633197cbb6146101125780633ccfd60b1461013d5780636b69a5921461015457806378e979251461017f575b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce9190610f5a565b61029b565b6040516100e09190610fa0565b60405180910390f35b3480156100f557600080fd5b50610110600480360381019061010b9190610fe7565b6102e4565b005b34801561011e57600080fd5b506101276104bf565b6040516101349190610fa0565b60405180910390f35b34801561014957600080fd5b506101526104c5565b005b34801561016057600080fd5b5061016961078d565b6040516101769190610fa0565b60405180910390f35b34801561018b57600080fd5b5061019461079a565b6040516101a19190610fa0565b60405180910390f35b3480156101b657600080fd5b506101bf6107a0565b6040516101cc9190611023565b60405180910390f35b3480156101e157600080fd5b506101ea6107c8565b6040516101f7919061109d565b60405180910390f35b6102086107f2565b005b34801561021657600080fd5b5061021f6109ee565b005b34801561022d57600080fd5b5061024860048036038101906102439190610fe7565b610d1a565b6040516102559190611023565b60405180910390f35b34801561026a57600080fd5b5061028560048036038101906102809190610f5a565b610d62565b6040516102929190610fa0565b60405180910390f35b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000811180156103335750600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111155b610372576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036990611115565b60405180910390fd5b60015442106103b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ad90611181565b60405180910390fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461040591906111d0565b9250508190555060003373ffffffffffffffffffffffffffffffffffffffff168260405161043290611235565b60006040518083038185875af1925050503d806000811461046f576040519150601f19603f3d011682016040523d82523d6000602084013e610474565b606091505b505090508061048257600080fd5b7f510b82fea70ff89a8cc73cd7f29db2d7b480134c160cb52a258797b42d1989ad82336040516104b392919061124a565b60405180910390a15050565b60015481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461054a576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600154421161058e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610585906112bf565b60405180910390fd5b60005b60028054905081101561063a576000600282815481106105b4576105b36112df565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806106329061130e565b915050610591565b50600067ffffffffffffffff81111561065657610655611356565b5b6040519080825280602002602001820160405280156106845781602001602082028036833780820191505090505b506002908051906020019061069a929190610e50565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516106e190611235565b60006040518083038185875af1925050503d806000811461071e576040519150601f19603f3d011682016040523d82523d6000602084013e610723565b606091505b505090508061073157600080fd5b7f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b657f000000000000000000000000000000000000000000000000000000000000000047604051610782929190611385565b60405180910390a150565b6802b5e3af16b188000081565b60005481565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b1880000610831600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1634610d8390919063ffffffff16565b1015610872576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610869906113fa565b60405180910390fd5b60005442116108b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ad90611466565b60405180910390fd5b60015442106108fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f190611181565b60405180910390fd5b34600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109499190611486565b925050819055506002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f4cbf32782e2854c8080e9af69f02b587ea4b47b4de68d74f3faeadd396801d5c34336040516109e492919061124a565b60405180910390a1565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a73576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001544211610ab7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aae906112bf565b60405180910390fd5b60006002805480602002602001604051908101604052809291908181526020018280548015610b3b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610af1575b5050505050905060005b8151811015610bc6576000828281518110610b6357610b626112df565b5b602002602001015190506000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080610bbe9061130e565b915050610b45565b50600067ffffffffffffffff811115610be257610be1611356565b5b604051908082528060200260200182016040528015610c105781602001602082028036833780820191505090505b5060029080519060200190610c26929190610e50565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1647604051610c6d90611235565b60006040518083038185875af1925050503d8060008114610caa576040519150601f19603f3d011682016040523d82523d6000602084013e610caf565b606091505b5050905080610cbd57600080fd5b7f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b657f000000000000000000000000000000000000000000000000000000000000000047604051610d0e929190611385565b60405180910390a15050565b600060028281548110610d3057610d2f6112df565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008173ffffffffffffffffffffffffffffffffffffffff16319050919050565b600080610d8f83610dbf565b90506000670de0b6b3a76400008583610da891906114ba565b610db2919061152b565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610e0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3191906115e9565b5050509150506402540be40081610e489190611664565b915050919050565b828054828255906000526020600020908101928215610ec9579160200282015b82811115610ec85782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610e70565b5b509050610ed69190610eda565b5090565b5b80821115610ef3576000816000905550600101610edb565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f2782610efc565b9050919050565b610f3781610f1c565b8114610f4257600080fd5b50565b600081359050610f5481610f2e565b92915050565b600060208284031215610f7057610f6f610ef7565b5b6000610f7e84828501610f45565b91505092915050565b6000819050919050565b610f9a81610f87565b82525050565b6000602082019050610fb56000830184610f91565b92915050565b610fc481610f87565b8114610fcf57600080fd5b50565b600081359050610fe181610fbb565b92915050565b600060208284031215610ffd57610ffc610ef7565b5b600061100b84828501610fd2565b91505092915050565b61101d81610f1c565b82525050565b60006020820190506110386000830184611014565b92915050565b6000819050919050565b600061106361105e61105984610efc565b61103e565b610efc565b9050919050565b600061107582611048565b9050919050565b60006110878261106a565b9050919050565b6110978161107c565b82525050565b60006020820190506110b2600083018461108e565b92915050565b600082825260208201905092915050565b7f5468652076616c756520656e7465726564206973206e6f742076616c69640000600082015250565b60006110ff601e836110b8565b915061110a826110c9565b602082019050919050565b6000602082019050818103600083015261112e816110f2565b9050919050565b7f74696d65206973206f7665720000000000000000000000000000000000000000600082015250565b600061116b600c836110b8565b915061117682611135565b602082019050919050565b6000602082019050818103600083015261119a8161115e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006111db82610f87565b91506111e683610f87565b92508282039050818111156111fe576111fd6111a1565b5b92915050565b600081905092915050565b50565b600061121f600083611204565b915061122a8261120f565b600082019050919050565b600061124082611212565b9150819050919050565b600060408201905061125f6000830185610f91565b61126c6020830184611014565b9392505050565b7f54696d65206973206e6f74206f76657200000000000000000000000000000000600082015250565b60006112a96010836110b8565b91506112b482611273565b602082019050919050565b600060208201905081810360008301526112d88161129c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061131982610f87565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361134b5761134a6111a1565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060408201905061139a6000830185611014565b6113a76020830184610f91565b9392505050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b60006113e4601b836110b8565b91506113ef826113ae565b602082019050919050565b60006020820190508181036000830152611413816113d7565b9050919050565b7f5468652066756e642074696d6520686173206e6f742073746172746564000000600082015250565b6000611450601d836110b8565b915061145b8261141a565b602082019050919050565b6000602082019050818103600083015261147f81611443565b9050919050565b600061149182610f87565b915061149c83610f87565b92508282019050808211156114b4576114b36111a1565b5b92915050565b60006114c582610f87565b91506114d083610f87565b92508282026114de81610f87565b915082820484148315176114f5576114f46111a1565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061153682610f87565b915061154183610f87565b925082611551576115506114fc565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61157b8161155c565b811461158657600080fd5b50565b60008151905061159881611572565b92915050565b6000819050919050565b6115b18161159e565b81146115bc57600080fd5b50565b6000815190506115ce816115a8565b92915050565b6000815190506115e381610fbb565b92915050565b600080600080600060a0868803121561160557611604610ef7565b5b600061161388828901611589565b9550506020611624888289016115bf565b9450506040611635888289016115d4565b9350506060611646888289016115d4565b925050608061165788828901611589565b9150509295509295909350565b600061166f8261159e565b915061167a8361159e565b92508282026116888161159e565b91507f800000000000000000000000000000000000000000000000000000000000000084146000841216156116c0576116bf6111a1565b5b82820584148315176116d5576116d46111a1565b5b509291505056fea2646970667358221220c3fd9c3592512372fbdc91ed521fffc3f380f9353ab3f5353a82aed2a3a5757f64736f6c63430008130033",
  "deployedBytecode": "",
  "devdoc": {
    "author": "Patrick Collins",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {
      "getAddressToAmountFunded(address)": {
        "params": {
          "fundingAddress": "the address of the funder"
        },
        "returns": {
          "_0": "the amount funded"
        }
      }
    },
    "title": "A sample Funding Contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "Funds our contract based on the ETH/USD price"
      },
      "getAddressToAmountFunded(address)": {
        "notice": "Gets the amount that an address has funded"
      }
    },
    "notice": "This contract is for creating a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "startTime",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "endTime",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 75,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 78,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}